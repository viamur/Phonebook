{"version":3,"file":"static/js/BlockForContacts.35a1f32c.chunk.js","mappings":"yOACA,GAAgB,KAAO,0BAA0B,MAAQ,2BAA2B,IAAM,0B,6BCqF1F,EA/EoB,WAClB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJJ,IACFR,EAAQQ,EAAQT,MAChBG,EAAUM,EAAQP,WAEnB,CAACO,IAEJ,IAAMK,EAAoB,SAAAC,GACxB,IAAMC,EAAQD,EAAEE,OAED,SAAfD,EAAMhB,MAAmBC,EAAQe,EAAME,OACxB,WAAfF,EAAMhB,MAAqBG,EAAUa,EAAME,QAqB7C,OACE,+BACE,kBAAMC,SApBoB,SAAAJ,GAE5B,GADAA,EAAEK,iBACEX,EAIF,OAHAE,GAASU,EAAAA,EAAAA,KAAa,kBAAKZ,GAAN,IAAeT,KAAAA,EAAME,OAAAA,MAC1CD,EAAQ,SACRE,EAAU,IAGEC,EAASkB,MAAK,SAAAC,GAAE,OAAIA,EAAGvB,KAAKwB,gBAAkBxB,EAAKwB,iBAM/DC,EAAAA,OAAAA,QAAe,QAASzB,EAAO,yBAA0B,SAJzDW,GAASe,EAAAA,EAAAA,IAAY,CAAE1B,KAAAA,EAAME,OAAAA,KAC7BD,EAAQ,IACRE,EAAU,MAQ6BwB,UAAWC,EAAAA,KAAlD,WACE,kBAAOD,UAAWC,EAAAA,MAAlB,UACE,kBACEC,KAAK,OACL7B,KAAK,OACL2B,UAAWC,EAAAA,MACXE,YAAY,OACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRf,MAAOlB,EACPkC,SAAUpB,OAGd,kBAAOa,UAAWC,EAAAA,MAAlB,UACE,kBACEC,KAAK,MACL7B,KAAK,SACL2B,UAAWC,EAAAA,MACXE,YAAY,SACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRE,UAAW,GACXjB,MAAOhB,EACPgC,SAAUpB,OAGd,mBAAQa,UAAWC,EAAAA,IAAOC,KAAK,SAASO,SAAU7B,EAAlD,SACGA,EAAY,aAAeE,EAAU,eAAiB,sBC9EjE,EAAwB,sBAAxB,EAAsD,sB,UCuBtD,EAnBe,WACb,IAAMS,GAAQb,EAAAA,EAAAA,IAAYgC,EAAAA,IAEpB1B,GAAWC,EAAAA,EAAAA,MACjB,OACE,iCACE,cAAGe,UAAWC,EAAd,oCACA,kBACEC,KAAK,OACLC,YAAY,aACZH,UAAWC,EACX5B,KAAK,SACLkB,MAAOA,EACPgB,SAAU,SAAAnB,GAAC,OAAIJ,GAAS2B,EAAAA,EAAAA,IAAavB,EAAEE,OAAOC,eCPtD,EARyB,WACvB,OACE,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,S,oKCLOZ,EAAgB,SAAAiC,GAAK,OAAIA,EAAMnC,SAASoC,OACxCH,EAAiB,SAAAE,GAAK,OAAIA,EAAMnC,SAASqC,QACzCjC,EAAkB,SAAA+B,GAAK,OAAIA,EAAMnC,SAASG,WAC1CG,EAAe,SAAA6B,GAAK,OAAIA,EAAMnC,SAASsC,MAEvCC,GAAsBC,EAAAA,EAAAA,IACjC,CAACtC,EAAe+B,IAChB,SAACG,EAAOC,GAIN,OAHiBD,EAAMC,QAAO,SAAAI,GAAI,OAChCA,EAAK7C,KAAKwB,cAAcsB,SAASL,EAAOM","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/BlockForContacts/BlockForContacts.jsx","redux/contacts/contactsSelector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport s from './ContactForm.module.css';\nimport { addContacts, editContacts } from 'redux/contacts/contactsOperations';\nimport { getStateEdit, getStateItems, getStateLoading } from 'redux/contacts/contactsSelector';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getStateItems);\n  const isLoading = useSelector(getStateLoading);\n  const editObj = useSelector(getStateEdit);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (editObj) {\n      setName(editObj.name);\n      setNumber(editObj.number);\n    }\n  }, [editObj]);\n\n  const handleChangeInput = e => {\n    const input = e.target;\n\n    input.name === 'name' && setName(input.value);\n    input.name === 'number' && setNumber(input.value);\n  };\n\n  const handleFormCompilation = e => {\n    e.preventDefault();\n    if (editObj) {\n      dispatch(editContacts({ ...editObj, name, number }));\n      setName('');\n      setNumber('');\n      return;\n    }\n    const check = contacts.find(el => el.name.toLowerCase() === name.toLowerCase());\n    if (!check) {\n      dispatch(addContacts({ name, number }));\n      setName('');\n      setNumber('');\n    } else {\n      Report.failure('Error', name + 'is already in contacts', 'Okay');\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormCompilation} className={s.form}>\n        <label className={s.label}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={s.input}\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChangeInput}\n          />\n        </label>\n        <label className={s.label}>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={s.input}\n            placeholder=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            maxLength={18}\n            value={number}\n            onChange={handleChangeInput}\n          />\n        </label>\n        <button className={s.btn} type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Loading...' : editObj ? 'Edit contact' : 'Add contact'}\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"title\":\"Filter_title__pSkfx\"};","import { useDispatch, useSelector } from 'react-redux';\nimport s from './Filter.module.css';\nimport { changeFilter } from '../../redux/contacts/contactsSlice';\nimport { getStateFilter } from 'redux/contacts/contactsSelector';\n\nconst Filter = () => {\n  const value = useSelector(getStateFilter);\n\n  const dispatch = useDispatch();\n  return (\n    <>\n      <p className={s.title}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        placeholder=\"Enter name\"\n        className={s.input}\n        name=\"filter\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\n\nconst BlockForContacts = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n    </>\n  );\n};\nexport default BlockForContacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getStateItems = state => state.contacts.items;\nexport const getStateFilter = state => state.contacts.filter;\nexport const getStateLoading = state => state.contacts.isLoading;\nexport const getStateEdit = state => state.contacts.edit;\n\nexport const contactsAfterFilter = createSelector(\n  [getStateItems, getStateFilter],\n  (items, filter) => {\n    const newItems = items.filter(item =>\n      item.name.toLowerCase().includes(filter.toLocaleLowerCase())\n    );\n    return newItems;\n  }\n);\n"],"names":["useState","name","setName","number","setNumber","contacts","useSelector","getStateItems","isLoading","getStateLoading","editObj","getStateEdit","dispatch","useDispatch","useEffect","handleChangeInput","e","input","target","value","onSubmit","preventDefault","editContacts","find","el","toLowerCase","Report","addContacts","className","s","type","placeholder","pattern","title","required","onChange","maxLength","disabled","getStateFilter","changeFilter","state","items","filter","edit","contactsAfterFilter","createSelector","item","includes","toLocaleLowerCase"],"sourceRoot":""}